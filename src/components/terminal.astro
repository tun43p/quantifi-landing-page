---
interface Props {
  contents: TerminalContent[];
}

const { contents } = Astro.props;
---

<div>
  {
    contents.map((content: TerminalContent, index: number) => (
      <div class="container">
        <p
          class="text"
          aria-index={index}
          aria-value={content.text}
          aria-symbol={content.symbol}
        />
      </div>
    ))
  }
</div>

<style>
  .container {
    display: flex;
    align-items: center;
  }
</style>

<script>
  (() => {
    const texts = document.querySelectorAll("p.text");

    if (!texts) return;

    texts.forEach((text) => {
      const index = parseInt(text.getAttribute("aria-index") ?? "0");
      const value = text.getAttribute("aria-value");
      const symbol = text.getAttribute("aria-symbol");

      if (!value) return;

      let i = 0;

      let seed = 0;
      let speed = 50;

      const type = () => {
        if (i < value.length) {
          text.textContent += value.charAt(i);
          i++;

          seed = Math.floor(Math.random() * 10);
          speed = Math.floor(Math.random() * 10 * seed) + 50;

          if (seed === 5) speed = 250;

          setTimeout(type, speed);
        }
      };

      if (index === 0) {
        type();
        return;
      }

      const i1 = setInterval(() => {
        const previousText = texts[index - 1];
        const previousValue = previousText?.getAttribute("aria-value");

        if (previousValue == null || previousText?.textContent == null) {
          return;
        }

        if (previousText.textContent.length === previousValue.length) {
          type();
          clearInterval(i1);
          return;
        }
      }, speed);

      if (symbol) {
        const symbolText = document.createElement("span");
        text.parentElement?.appendChild(symbolText);

        const i2 = setInterval(() => {
          if (text.textContent?.length === value.length) {
            setInterval(() => {
              if (symbol === ".") {
                if (symbolText.textContent === "...") {
                  symbolText.textContent = ".";
                } else {
                  symbolText.textContent += ".";
                }
              } else if (symbol === "/") {
                if (symbolText.textContent === "/") {
                  symbolText.textContent = "|";
                } else if (symbolText.textContent === "|") {
                  symbolText.textContent = "\\";
                } else {
                  symbolText.textContent = "/";
                }
              }
            }, 500);

            clearInterval(i2);
          }
        });
      }
    });
  })();
</script>
